{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","body","classList","add","remove","checked","setLightMode","applyColorMode","mode","setColorMode","savedMode","localStorage","getItem","prefersDark","window","matchMedia","matches","checkModeChange","addEventListener","event","querySelector","target","id","setItem"],"mappings":"AAAA,aAAA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAGtCE,YAAc,WAClBH,SAASI,KAAKC,UAAUC,IAAI,QAC5BN,SAASI,KAAKC,UAAUE,OAAO,SAC/BR,WAAWS,SAAU,CACvB,EAGMC,aAAe,WACnBT,SAASI,KAAKC,UAAUC,IAAI,SAC5BN,SAASI,KAAKC,UAAUE,OAAO,QAC/BL,YAAYM,SAAU,CACxB,EAGME,eAAiB,SAACC,GACP,SAATA,EACAR,cAEAM,cAER,EAGMG,aAAe,WACnB,IAAMC,EAAYC,aAAaC,QAAQ,aAEvC,GAAIF,EACFH,eAAeG,OACV,CAEL,IAAMG,EAAcC,OAAOC,WAAW,gCAAgCC,QACtET,eAAeM,EAAc,OAAS,QACxC,CACF,EAGMI,gBAAkB,WACtBH,OAAOC,WAAW,gCAAgCG,iBAAiB,UAAU,SAACC,GAC5EZ,eAAeY,EAAMH,QAAU,OAAS,QAC1C,GACF,EAGAnB,SAASuB,cAAc,oBAAoBF,iBAAiB,SAAS,SAACC,GAC5C,SAApBA,EAAME,OAAOC,IACfX,aAAaY,QAAQ,YAAa,QAClCvB,eAC6B,UAApBmB,EAAME,OAAOC,KACtBX,aAAaY,QAAQ,YAAa,SAClCjB,eAEJ,IAEAG,eACAQ","file":"script.js","sourcesContent":["const darkButton = document.getElementById(\"dark\");\r\nconst lightButton = document.getElementById(\"light\");\r\n\r\n// Function to enable dark mode\r\nconst setDarkMode = () => {\r\n  document.body.classList.add(\"dark\");\r\n  document.body.classList.remove(\"light\");\r\n  darkButton.checked = true;\r\n};\r\n\r\n// Function to enable light mode\r\nconst setLightMode = () => {\r\n  document.body.classList.add(\"light\");\r\n  document.body.classList.remove(\"dark\");\r\n  lightButton.checked = true;\r\n};\r\n\r\n// Function to apply a given color mode\r\nconst applyColorMode = (mode) => {\r\n    if (mode === \"dark\") {\r\n        setDarkMode();\r\n    } else {\r\n        setLightMode();\r\n    }\r\n};\r\n\r\n// Function to check and apply the saved color mode from localStorage\r\nconst setColorMode = () => {\r\n  const savedMode = localStorage.getItem(\"colorMode\");\r\n\r\n  if (savedMode) {\r\n    applyColorMode(savedMode);\r\n  } else {\r\n        // Check system preference for dark mode\r\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    applyColorMode(prefersDark ? \"dark\" : \"light\");\r\n  }\r\n};\r\n\r\n// Function to detect system theme changes and apply them dynamically\r\nconst checkModeChange = () => {\r\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", (event) => {\r\n    applyColorMode(event.matches ? \"dark\" : \"light\");\r\n  });\r\n};\r\n\r\n// Event listener for user input on the theme toggle switch\r\ndocument.querySelector(\".toggle__wrapper\").addEventListener(\"input\", (event) => {\r\n  if (event.target.id === \"dark\") {\r\n    localStorage.setItem(\"colorMode\", \"dark\");\r\n    setDarkMode();\r\n  } else if (event.target.id === \"light\") {\r\n    localStorage.setItem(\"colorMode\", \"light\");\r\n    setLightMode();\r\n  }\r\n});\r\n\r\nsetColorMode();\r\ncheckModeChange();\r\n"]}